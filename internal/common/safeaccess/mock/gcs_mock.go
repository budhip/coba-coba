// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/common/safeaccess/gcs.go
//
// Generated by this command:
//
//	mockgen -source=./internal/common/safeaccess/gcs.go -destination=./internal/common/safeaccess/mock/gcs_mock.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	safeaccess "bitbucket.org/Amartha/go-fp-transaction/internal/common/safeaccess"
	gomock "go.uber.org/mock/gomock"
)

// MockObjectStorageClient is a mock of ObjectStorageClient interface.
type MockObjectStorageClient[T any] struct {
	ctrl     *gomock.Controller
	recorder *MockObjectStorageClientMockRecorder[T]
	isgomock struct{}
}

// MockObjectStorageClientMockRecorder is the mock recorder for MockObjectStorageClient.
type MockObjectStorageClientMockRecorder[T any] struct {
	mock *MockObjectStorageClient[T]
}

// NewMockObjectStorageClient creates a new mock instance.
func NewMockObjectStorageClient[T any](ctrl *gomock.Controller) *MockObjectStorageClient[T] {
	mock := &MockObjectStorageClient[T]{ctrl: ctrl}
	mock.recorder = &MockObjectStorageClientMockRecorder[T]{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockObjectStorageClient[T]) EXPECT() *MockObjectStorageClientMockRecorder[T] {
	return m.recorder
}

// LoadFile mocks base method.
func (m *MockObjectStorageClient[T]) LoadFile(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadFile", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadFile indicates an expected call of LoadFile.
func (mr *MockObjectStorageClientMockRecorder[T]) LoadFile(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadFile", reflect.TypeOf((*MockObjectStorageClient[T])(nil).LoadFile), ctx)
}

// UpdateFile mocks base method.
func (m *MockObjectStorageClient[T]) UpdateFile(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateFile", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateFile indicates an expected call of UpdateFile.
func (mr *MockObjectStorageClientMockRecorder[T]) UpdateFile(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateFile", reflect.TypeOf((*MockObjectStorageClient[T])(nil).UpdateFile), ctx)
}

// Value mocks base method.
func (m *MockObjectStorageClient[T]) Value() *safeaccess.Value[T] {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Value")
	ret0, _ := ret[0].(*safeaccess.Value[T])
	return ret0
}

// Value indicates an expected call of Value.
func (mr *MockObjectStorageClientMockRecorder[T]) Value() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Value", reflect.TypeOf((*MockObjectStorageClient[T])(nil).Value))
}
