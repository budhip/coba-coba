// Code generated by errorGen. DO NOT EDIT.

package models

import "errors"

const (
	ErrKeyDatabaseError                                   = "databaseError"
	ErrKeyDataNotFound                                    = "dataNotFound"
	ErrKeyCategoryCodeNotFound                            = "categoryCodeNotFound"
	ErrKeySubCategoryCodeNotFound                         = "subCategoryCodeNotFound"
	ErrKeyEntityCodeNotFound                              = "entityCodeNotFound"
	ErrKeyInvalidFormatAmount                             = "invalidFormatAmount"
	ErrKeyInvalidFormatDate                               = "invalidFormatDate"
	ErrKeyStartDateIsAfterEndDate                         = "StartDateIsAfterEndDate"
	ErrKeyDateRangeMax7Days                               = "dateRangeMax7Days"
	ErrKeyLimitMustBeGreaterThanZero                      = "limitMustBeGreaterThanZero"
	ErrKeyStartDateAndEndDateRequiredIfOneIsFilled        = "startDateAndEndDateRequiredIfOneIsFilled"
	ErrKeyAccountNumberRequired                           = "accountNumber_required"
	ErrKeyAccountNumberNotFound                           = "accountNumberNotFound"
	ErrKeyOwnerIdRequired                                 = "ownerId_required"
	ErrKeyOwnerIdAlphanum                                 = "ownerId_alphanum"
	ErrKeyOwnerIdMin                                      = "ownerId_min"
	ErrKeyOwnerIdMax                                      = "ownerId_max"
	ErrKeyCategoryCodeRequired                            = "categoryCode_required"
	ErrKeyCategoryCodeNumeric                             = "categoryCode_numeric"
	ErrKeyCategoryCodeMin                                 = "categoryCode_min"
	ErrKeyCategoryCodeMax                                 = "categoryCode_max"
	ErrKeySubCategoryCodeRequired                         = "subCategoryCode_required"
	ErrKeySubCategoryCodeNumeric                          = "subCategoryCode_numeric"
	ErrKeySubCategoryCodeMin                              = "subCategoryCode_min"
	ErrKeySubCategoryCodeMax                              = "subCategoryCode_max"
	ErrKeyEntityCodeRequired                              = "entityCode_required"
	ErrKeyEntityCodeNumeric                               = "entityCode_numeric"
	ErrKeyEntityCodeMin                                   = "entityCode_min"
	ErrKeyEntityCodeMax                                   = "entityCode_max"
	ErrKeyCurrencyRequired                                = "currency_required"
	ErrKeyCurrencyAlpha                                   = "currency_alpha"
	ErrKeyCurrencyMin                                     = "currency_min"
	ErrKeyCurrencyMax                                     = "currency_max"
	ErrKeyIsHvtRequired                                   = "isHvt_required"
	ErrKeySortByOneof                                     = "SortBy_oneof"
	ErrKeySortOneof                                       = "Sort_oneof"
	ErrKeyNameRequired                                    = "name_required"
	ErrKeyNameMax                                         = "name_max"
	ErrKeyNameNospecial                                   = "name_nospecial"
	ErrKeyNameNoStartEndSpaces                            = "name_noStartEndSpaces"
	ErrKeyCodeRequired                                    = "code_required"
	ErrKeyCodeNumeric                                     = "code_numeric"
	ErrKeyCodeMin                                         = "code_min"
	ErrKeyCodeMax                                         = "code_max"
	ErrKeyCreateSubCategoryRequestCodeRequired            = "CreateSubCategoryRequest.code_required"
	ErrKeyCreateSubCategoryRequestCodeNumeric             = "CreateSubCategoryRequest.code_numeric"
	ErrKeyCreateSubCategoryRequestCodeMin                 = "CreateSubCategoryRequest.code_min"
	ErrKeyCreateSubCategoryRequestCodeMax                 = "CreateSubCategoryRequest.code_max"
	ErrKeyFromAccountRequired                             = "fromAccount_required"
	ErrKeyFromAccountNumeric                              = "fromAccount_numeric"
	ErrKeyToAccountRequired                               = "toAccount_required"
	ErrKeyToAccountNumeric                                = "toAccount_numeric"
	ErrKeyAmountRequired                                  = "amount_required"
	ErrKeyAmountNumeric                                   = "amount_numeric"
	ErrKeyMethodNoStartEndSpaces                          = "method_noStartEndSpaces"
	ErrKeyTransactionTypeRequired                         = "transactionType_required"
	ErrKeyTransactionTypeCodeRequired                     = "transactionTypeCode_required"
	ErrKeyTransactionTypeAlpha                            = "transactionType_alpha"
	ErrKeyTransactionTypeNoStartEndSpaces                 = "transactionType_noStartEndSpaces"
	ErrKeyTransactionDateRequired                         = "transactionDate_required"
	ErrKeyTransactionDateDatetime                         = "transactionDate_datetime"
	ErrKeyTransactionDateDate                             = "transactionDate_date"
	ErrKeyTransactionTimeRequired                         = "transactionTime_required"
	ErrKeyTransactionTimeDatetime                         = "transactionTime_datetime"
	ErrKeyOrderTypeRequired                               = "orderType_required"
	ErrKeyOrderTypeCodeRequired                           = "orderTypeCode_required"
	ErrKeyOrderTypeAlpha                                  = "orderType_alpha"
	ErrKeyOrderTypeNoStartEndSpaces                       = "orderType_noStartEndSpaces"
	ErrKeyRefNumberRequired                               = "refNumber_required"
	ErrKeyRefNumberNoStartEndSpaces                       = "refNumber_noStartEndSpaces"
	ErrKeyDescriptionRequired                             = "description_required"
	ErrKeyDescriptionNoStartEndSpaces                     = "description_noStartEndSpaces"
	ErrKeyDescriptionNospecial                            = "description_nospecial"
	ErrKeyReconFileRequired                               = "reconFile_required"
	ErrKeyReconFileInvalidTemplate                        = "reconFile_invalidTemplate"
	ErrKeyReconFileInvalidType                            = "reconFile_invalidType"
	ErrKeyReconFileMustCsv                                = "reconFile_mustCSV"
	ErrKeyStatusOneof                                     = "Status_oneof"
	ErrKeyOrderTimeRequired                               = "orderTime_required"
	ErrKeyTransactionsRequired                            = "transactions_required"
	ErrKeyTransactionsGt                                  = "transactions_gt"
	ErrKeyIdRequired                                      = "id_required"
	ErrKeySourceAccountIdRequired                         = "sourceAccountId_required"
	ErrKeyDestinationAccountIdRequired                    = "destinationAccountId_required"
	ErrKeyMethodRequired                                  = "method_required"
	ErrKeyStatusRequired                                  = "status_required"
	ErrKeyTransactionTimeIso8601Datetime                  = "transactionTime_iso8601datetime"
	ErrKeyTransactionFlowRequired                         = "transactionFlow_required"
	ErrKeyTransactionFlowOneof                            = "transactionFlow_oneof"
	ErrKeyNetAmountRequired                               = "netAmount_required"
	ErrKeyValueRequired                                   = "value_required"
	ErrKeyTypeRequired                                    = "type_required"
	ErrKeyDoCreateAccountRequestStatusOneof               = "DoCreateAccountRequest.status_oneof"
	ErrKeyFilesRequired                                   = "files_required"
	ErrKeyFilesMustCsv                                    = "files_mustCsv"
	ErrKeyFailedFromExternalClient                        = "failedFromExternalClient"
	ErrKeyUpdateStatusWalletTransactionRequestActionOneof = "UpdateStatusWalletTransactionRequest.action_oneof"
	ErrKeySummaryIdnotFound                               = "summaryIDNotFound"
)

const (
	errCodeDatabaseError       = "DATABASE_ERROR"
	errCodeDataNotFound        = "DATA_NOT_FOUND"
	errCodeInvalidValues       = "INVALID_VALUES"
	errCodeMissingField        = "MISSING_FIELD"
	errCodeInvalidLength       = "INVALID_LENGTH"
	errCodeExternalServerError = "EXTERNAL_SERVER_ERROR"
)

var (
	errDatabaseError                                      = errors.New("database error")
	errDataNotFound                                       = errors.New("data not found")
	errCategoryCodeNotFound                               = errors.New("category code not found")
	errSubCategoryCodeNotFound                            = errors.New("sub category code not found")
	errEntityCodeNotFound                                 = errors.New("entity code not found")
	errInvalidFormatAmount                                = errors.New("invalid format amount")
	errInvalidFormatDate                                  = errors.New("invalid format date")
	errEndDateMustBeGreaterThanStartDate                  = errors.New("end date must be greater than start date")
	errDateRangeMax7Days                                  = errors.New("date range max 7 days")
	errTheLimitMustBeGreaterThanZero                      = errors.New("the limit must be greater than zero")
	errStartDateOrEndDateMustBeFilledInIfEitherIsFilledIn = errors.New("start date or end date must be filled in if either is filled in")
	errFieldIsMissing                                     = errors.New("field is missing")
	errAccountNumberNotFound                              = errors.New("account number not found")
	errFieldCanOnlyContainAlphanumericValues              = errors.New("field can only contain alphanumeric values")
	errFieldMustBeAtLeast1Characters                      = errors.New("field must be at least 1 characters")
	errFieldCanHaveAMaximumLengthOf15Characters           = errors.New("field can have a maximum length of 15 characters")
	errFieldCanOnlyContainNumericValues                   = errors.New("field can only contain numeric values")
	errFieldMustBeAtLeast3Characters                      = errors.New("field must be at least 3 characters")
	errFieldCanHaveAMaximumLengthOf3Characters            = errors.New("field can have a maximum length of 3 characters")
	errFieldMustBeAtLeast5Characters                      = errors.New("field must be at least 5 characters")
	errFieldCanHaveAMaximumLengthOf5Characters            = errors.New("field can have a maximum length of 5 characters")
	errFieldCanOnlyContainAlphaValues                     = errors.New("field can only contain alpha values")
	errSortByMustBeLastUpdatedDate                        = errors.New("sortBy must be lastUpdatedDate")
	errSortMustBeAscOrDesc                                = errors.New("sort must be asc or desc")
	errFieldCanHaveAMaximumLengthOf50Characters           = errors.New("field can have a maximum length of 50 characters")
	errInputFieldNoSpecialCharacters                      = errors.New("input field no special characters")
	errFieldsShouldNotAcceptSpacesAtStartAndEndOfInput    = errors.New("fields should not accept spaces at start and end of input")
	errInvalidFormatDatetime                              = errors.New("invalid format datetime")
	errInvalidTemplate                                    = errors.New("invalid template")
	errInvalidType                                        = errors.New("invalid type")
	errFileMustBeCsv                                      = errors.New("file must be csv")
	errStatusMustBeOneOfAvailableData                     = errors.New("status must be one of available data")
	errFieldIsEmpty                                       = errors.New("field is empty")
	errInvalidFormatIso8601Datetime                       = errors.New("invalid format iso8601datetime")
	errStatusMustBeCashinCashoutOrTransfer                = errors.New("status must be cashin, cashout or transfer")
	errStatusMustBeActiveOrInactive                       = errors.New("status must be active or inactive")
	errInvalidFormatFile                                  = errors.New("invalid format file")
	errFailedFromExternalClient                           = errors.New("failed from external client")
	errActionMustBeCommitOrCancel                         = errors.New("action must be commit or cancel")
	errSummaryIdNotFound                                  = errors.New("summary id not found")
)

var MapErrors = MapErrs{
	ErrKeyDatabaseError: ErrorDetail{
		Code:         errCodeDatabaseError,
		ErrorMessage: errDatabaseError,
	},
	ErrKeyDataNotFound: ErrorDetail{
		Code:         errCodeDataNotFound,
		ErrorMessage: errDataNotFound,
	},
	ErrKeyCategoryCodeNotFound: ErrorDetail{
		Code:         errCodeDataNotFound,
		ErrorMessage: errCategoryCodeNotFound,
	},
	ErrKeySubCategoryCodeNotFound: ErrorDetail{
		Code:         errCodeDataNotFound,
		ErrorMessage: errSubCategoryCodeNotFound,
	},
	ErrKeyEntityCodeNotFound: ErrorDetail{
		Code:         errCodeDataNotFound,
		ErrorMessage: errEntityCodeNotFound,
	},
	ErrKeyInvalidFormatAmount: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errInvalidFormatAmount,
	},
	ErrKeyInvalidFormatDate: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errInvalidFormatDate,
	},
	ErrKeyStartDateIsAfterEndDate: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errEndDateMustBeGreaterThanStartDate,
	},
	ErrKeyDateRangeMax7Days: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errDateRangeMax7Days,
	},
	ErrKeyLimitMustBeGreaterThanZero: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errTheLimitMustBeGreaterThanZero,
	},
	ErrKeyStartDateAndEndDateRequiredIfOneIsFilled: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errStartDateOrEndDateMustBeFilledInIfEitherIsFilledIn,
	},
	ErrKeyAccountNumberRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyAccountNumberNotFound: ErrorDetail{
		Code:         errCodeDataNotFound,
		ErrorMessage: errAccountNumberNotFound,
	},
	ErrKeyOwnerIdRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyOwnerIdAlphanum: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldCanOnlyContainAlphanumericValues,
	},
	ErrKeyOwnerIdMin: ErrorDetail{
		Code:         errCodeInvalidLength,
		ErrorMessage: errFieldMustBeAtLeast1Characters,
	},
	ErrKeyOwnerIdMax: ErrorDetail{
		Code:         errCodeInvalidLength,
		ErrorMessage: errFieldCanHaveAMaximumLengthOf15Characters,
	},
	ErrKeyCategoryCodeRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyCategoryCodeNumeric: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldCanOnlyContainNumericValues,
	},
	ErrKeyCategoryCodeMin: ErrorDetail{
		Code:         errCodeInvalidLength,
		ErrorMessage: errFieldMustBeAtLeast3Characters,
	},
	ErrKeyCategoryCodeMax: ErrorDetail{
		Code:         errCodeInvalidLength,
		ErrorMessage: errFieldCanHaveAMaximumLengthOf3Characters,
	},
	ErrKeySubCategoryCodeRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeySubCategoryCodeNumeric: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldCanOnlyContainNumericValues,
	},
	ErrKeySubCategoryCodeMin: ErrorDetail{
		Code:         errCodeInvalidLength,
		ErrorMessage: errFieldMustBeAtLeast5Characters,
	},
	ErrKeySubCategoryCodeMax: ErrorDetail{
		Code:         errCodeInvalidLength,
		ErrorMessage: errFieldCanHaveAMaximumLengthOf5Characters,
	},
	ErrKeyEntityCodeRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyEntityCodeNumeric: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldCanOnlyContainNumericValues,
	},
	ErrKeyEntityCodeMin: ErrorDetail{
		Code:         errCodeInvalidLength,
		ErrorMessage: errFieldMustBeAtLeast3Characters,
	},
	ErrKeyEntityCodeMax: ErrorDetail{
		Code:         errCodeInvalidLength,
		ErrorMessage: errFieldCanHaveAMaximumLengthOf3Characters,
	},
	ErrKeyCurrencyRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyCurrencyAlpha: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldCanOnlyContainAlphaValues,
	},
	ErrKeyCurrencyMin: ErrorDetail{
		Code:         errCodeInvalidLength,
		ErrorMessage: errFieldMustBeAtLeast3Characters,
	},
	ErrKeyCurrencyMax: ErrorDetail{
		Code:         errCodeInvalidLength,
		ErrorMessage: errFieldCanHaveAMaximumLengthOf3Characters,
	},
	ErrKeyIsHvtRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeySortByOneof: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errSortByMustBeLastUpdatedDate,
	},
	ErrKeySortOneof: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errSortMustBeAscOrDesc,
	},
	ErrKeyNameRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyNameMax: ErrorDetail{
		Code:         errCodeInvalidLength,
		ErrorMessage: errFieldCanHaveAMaximumLengthOf50Characters,
	},
	ErrKeyNameNospecial: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errInputFieldNoSpecialCharacters,
	},
	ErrKeyNameNoStartEndSpaces: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldsShouldNotAcceptSpacesAtStartAndEndOfInput,
	},
	ErrKeyCodeRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyCodeNumeric: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldCanOnlyContainAlphaValues,
	},
	ErrKeyCodeMin: ErrorDetail{
		Code:         errCodeInvalidLength,
		ErrorMessage: errFieldMustBeAtLeast3Characters,
	},
	ErrKeyCodeMax: ErrorDetail{
		Code:         errCodeInvalidLength,
		ErrorMessage: errFieldCanHaveAMaximumLengthOf3Characters,
	},
	ErrKeyCreateSubCategoryRequestCodeRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyCreateSubCategoryRequestCodeNumeric: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldCanOnlyContainNumericValues,
	},
	ErrKeyCreateSubCategoryRequestCodeMin: ErrorDetail{
		Code:         errCodeInvalidLength,
		ErrorMessage: errFieldMustBeAtLeast5Characters,
	},
	ErrKeyCreateSubCategoryRequestCodeMax: ErrorDetail{
		Code:         errCodeInvalidLength,
		ErrorMessage: errFieldCanHaveAMaximumLengthOf5Characters,
	},
	ErrKeyFromAccountRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyFromAccountNumeric: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldCanOnlyContainNumericValues,
	},
	ErrKeyToAccountRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyToAccountNumeric: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldCanOnlyContainNumericValues,
	},
	ErrKeyAmountRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyAmountNumeric: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldCanOnlyContainNumericValues,
	},
	ErrKeyMethodNoStartEndSpaces: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldsShouldNotAcceptSpacesAtStartAndEndOfInput,
	},
	ErrKeyTransactionTypeRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyTransactionTypeCodeRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyTransactionTypeAlpha: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldCanOnlyContainAlphaValues,
	},
	ErrKeyTransactionTypeNoStartEndSpaces: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldsShouldNotAcceptSpacesAtStartAndEndOfInput,
	},
	ErrKeyTransactionDateRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyTransactionDateDatetime: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errInvalidFormatDatetime,
	},
	ErrKeyTransactionDateDate: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errInvalidFormatDate,
	},
	ErrKeyTransactionTimeRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyTransactionTimeDatetime: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errInvalidFormatDatetime,
	},
	ErrKeyOrderTypeRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyOrderTypeCodeRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyOrderTypeAlpha: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldCanOnlyContainAlphaValues,
	},
	ErrKeyOrderTypeNoStartEndSpaces: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldsShouldNotAcceptSpacesAtStartAndEndOfInput,
	},
	ErrKeyRefNumberRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyRefNumberNoStartEndSpaces: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldsShouldNotAcceptSpacesAtStartAndEndOfInput,
	},
	ErrKeyDescriptionRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyDescriptionNoStartEndSpaces: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFieldsShouldNotAcceptSpacesAtStartAndEndOfInput,
	},
	ErrKeyDescriptionNospecial: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errInputFieldNoSpecialCharacters,
	},
	ErrKeyReconFileRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyReconFileInvalidTemplate: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errInvalidTemplate,
	},
	ErrKeyReconFileInvalidType: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errInvalidType,
	},
	ErrKeyReconFileMustCsv: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errFileMustBeCsv,
	},
	ErrKeyStatusOneof: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errStatusMustBeOneOfAvailableData,
	},
	ErrKeyOrderTimeRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyTransactionsRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyTransactionsGt: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsEmpty,
	},
	ErrKeyIdRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeySourceAccountIdRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyDestinationAccountIdRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyMethodRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyStatusRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyTransactionTimeIso8601Datetime: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errInvalidFormatIso8601Datetime,
	},
	ErrKeyTransactionFlowRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyTransactionFlowOneof: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errStatusMustBeCashinCashoutOrTransfer,
	},
	ErrKeyNetAmountRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyValueRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyTypeRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyDoCreateAccountRequestStatusOneof: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errStatusMustBeActiveOrInactive,
	},
	ErrKeyFilesRequired: ErrorDetail{
		Code:         errCodeMissingField,
		ErrorMessage: errFieldIsMissing,
	},
	ErrKeyFilesMustCsv: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errInvalidFormatFile,
	},
	ErrKeyFailedFromExternalClient: ErrorDetail{
		Code:         errCodeExternalServerError,
		ErrorMessage: errFailedFromExternalClient,
	},
	ErrKeyUpdateStatusWalletTransactionRequestActionOneof: ErrorDetail{
		Code:         errCodeInvalidValues,
		ErrorMessage: errActionMustBeCommitOrCancel,
	},
	ErrKeySummaryIdnotFound: ErrorDetail{
		Code:         errCodeDataNotFound,
		ErrorMessage: errSummaryIdNotFound,
	},
}
