// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/services/migration_service.go
//
// Generated by this command:
//
//	mockgen -source=./internal/services/migration_service.go -destination=./internal/services/mock/migration_service_mock.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	models "bitbucket.org/Amartha/go-fp-transaction/internal/models"
	txtransformer "bitbucket.org/Amartha/script-acting-migration/pkg/txtransformer"
	gomock "go.uber.org/mock/gomock"
)

// MockMigrationService is a mock of MigrationService interface.
type MockMigrationService struct {
	ctrl     *gomock.Controller
	recorder *MockMigrationServiceMockRecorder
	isgomock struct{}
}

// MockMigrationServiceMockRecorder is the mock recorder for MockMigrationService.
type MockMigrationServiceMockRecorder struct {
	mock *MockMigrationService
}

// NewMockMigrationService creates a new mock instance.
func NewMockMigrationService(ctrl *gomock.Controller) *MockMigrationService {
	mock := &MockMigrationService{ctrl: ctrl}
	mock.recorder = &MockMigrationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMigrationService) EXPECT() *MockMigrationServiceMockRecorder {
	return m.recorder
}

// TransformIbuDBToAcuanTransactionInput mocks base method.
func (m *MockMigrationService) TransformIbuDBToAcuanTransactionInput(ctx context.Context, ibuDBTransaction txtransformer.IbuDBTransaction) ([]models.TransactionReq, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransformIbuDBToAcuanTransactionInput", ctx, ibuDBTransaction)
	ret0, _ := ret[0].([]models.TransactionReq)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TransformIbuDBToAcuanTransactionInput indicates an expected call of TransformIbuDBToAcuanTransactionInput.
func (mr *MockMigrationServiceMockRecorder) TransformIbuDBToAcuanTransactionInput(ctx, ibuDBTransaction any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransformIbuDBToAcuanTransactionInput", reflect.TypeOf((*MockMigrationService)(nil).TransformIbuDBToAcuanTransactionInput), ctx, ibuDBTransaction)
}
