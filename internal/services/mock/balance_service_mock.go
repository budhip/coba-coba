// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/services/balance_service.go
//
// Generated by this command:
//
//	mockgen -source=./internal/services/balance_service.go -destination=./internal/services/mock/balance_service_mock.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	models "bitbucket.org/Amartha/go-fp-transaction/internal/models"
	gomock "go.uber.org/mock/gomock"
)

// MockBalanceService is a mock of BalanceService interface.
type MockBalanceService struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceServiceMockRecorder
	isgomock struct{}
}

// MockBalanceServiceMockRecorder is the mock recorder for MockBalanceService.
type MockBalanceServiceMockRecorder struct {
	mock *MockBalanceService
}

// NewMockBalanceService creates a new mock instance.
func NewMockBalanceService(ctrl *gomock.Controller) *MockBalanceService {
	mock := &MockBalanceService{ctrl: ctrl}
	mock.recorder = &MockBalanceServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceService) EXPECT() *MockBalanceServiceMockRecorder {
	return m.recorder
}

// AdjustAccountBalance mocks base method.
func (m *MockBalanceService) AdjustAccountBalance(ctx context.Context, accountNumber string, updateAmount models.Decimal) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AdjustAccountBalance", ctx, accountNumber, updateAmount)
	ret0, _ := ret[0].(error)
	return ret0
}

// AdjustAccountBalance indicates an expected call of AdjustAccountBalance.
func (mr *MockBalanceServiceMockRecorder) AdjustAccountBalance(ctx, accountNumber, updateAmount any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdjustAccountBalance", reflect.TypeOf((*MockBalanceService)(nil).AdjustAccountBalance), ctx, accountNumber, updateAmount)
}

// Get mocks base method.
func (m *MockBalanceService) Get(ctx context.Context, accountNumber string) (models.AccountBalance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, accountNumber)
	ret0, _ := ret[0].(models.AccountBalance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockBalanceServiceMockRecorder) Get(ctx, accountNumber any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockBalanceService)(nil).Get), ctx, accountNumber)
}
