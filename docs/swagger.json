{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a go fp transaction api docs.",
        "title": "GO FP TRANSACTION API DUCUMENTATION",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:9567",
    "basePath": "/api",
    "paths": {
        "/health": {
            "get": {
                "description": "Get the status of server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get the status of server",
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/internal_deliveries_http_health.DoHealthCheckLivenessResponse"
                        }
                    }
                }
            }
        },
        "/orders": {
            "post": {
                "description": "Create order that have multiple transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create order that have multiple transactions",
                "parameters": [
                    {
                        "description": "A JSON object containing create transaction payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateOrderRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while create transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Data not found. This can happen if there is a data not found while create transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "422": {
                        "description": "Validation error. This can happen if there is an error validation while create transaction",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorValidationResponseModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_validation.ErrorValidateResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while create transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/transaction": {
            "post": {
                "description": "Create data from any transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create data transaction",
                "parameters": [
                    {
                        "description": "A JSON object containing create transaction payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.DoCreateTransactionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.DoGetTransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while create transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Data not found. This can happen if there is a data not found while create transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "422": {
                        "description": "Validation error. This can happen if there is an error validation while create transaction",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorValidationResponseModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_validation.ErrorValidateResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while create transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/transaction/bulk": {
            "post": {
                "description": "Create data from any transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create data transaction",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common.ApiSuccessResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common.ApiErrorResponseModel"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common.ApiErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common.ApiErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/transaction/report": {
            "post": {
                "description": "Generate transaction data as CSV and upload to GCS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Generate transaction report",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common.ApiSuccessResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common.ApiErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common.ApiErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/transactions/orders": {
            "post": {
                "description": "Create order transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create order transaction",
                "parameters": [
                    {
                        "description": "A JSON object containing create transaction payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateOrderRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.DoGetTransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while create transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Data not found. This can happen if there is a data not found while create transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "422": {
                        "description": "Validation error. This can happen if there is an error validation while create transaction",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorValidationResponseModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_validation.ErrorValidateResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while create transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/account-balances/:accountNumber": {
            "get": {
                "description": "Get balance by account number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Get balance by account number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account number",
                        "name": "accountNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.DoGetAccountBalanceResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/accounts": {
            "get": {
                "description": "Get All account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get All account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestPaginationResponseModel-array_bitbucket_org_Amartha_go-fp-transaction_internal_models_GetAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while delete account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while delete account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/accounts/": {
            "post": {
                "description": "Create New Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Create Account",
                "parameters": [
                    {
                        "description": "A JSON object containing create account payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.DoCreateAccountRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.DoCreateAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while create account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Data not found. This can happen if there is an data not found while create account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "422": {
                        "description": "Validation error. This can happen if there is an error validation while create account",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorValidationResponseModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_validation.ErrorValidateResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while create account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/accounts/balances": {
            "get": {
                "description": "Get total balance of all account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get total balance of all account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.AccountsTotalBalanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while delete account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while delete account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/accounts/sub-category/:subCategoryCode": {
            "patch": {
                "description": "Update account's data by sub category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Update account's data by sub category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account identifier",
                        "name": "accountNumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "A JSON object containing payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.UpdateAccountBySubCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body"
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while update account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "422": {
                        "description": "Validation error. This can happen if payload failed to be validated",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while update account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/accounts/{accountNumber}": {
            "get": {
                "description": "Get one account detail by account number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get one account by account number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account identifier",
                        "name": "accountNumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "21100100000001",
                        "name": "accountNumber",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.GetAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while get account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Data not found. This can happen if data not found while get account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while get account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete account's data by account number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Delete account's data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account identifier",
                        "name": "accountNumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "21100100000001",
                        "name": "accountNumber",
                        "in": "query"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while get account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Data not found. This can happen if data not found while get account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while get account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update account's data by account number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Update account's data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account identifier",
                        "name": "accountNumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "A JSON object containing payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.UpdateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.GetAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while get account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Data not found. This can happen if data not found while get account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while get account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/accounts/{accountNumber}/balances": {
            "get": {
                "description": "Get one account detail by account number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get one account by account number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account identifier",
                        "name": "accountNumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.DoGetAccountBalanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while get account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Data not found. This can happen if data not found while get account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while get account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/accounts/{accountNumber}/features": {
            "post": {
                "description": "create account features related to internal wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Create account feature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account identifier",
                        "name": "accountNumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "A JSON object containing payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateWalletReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been created in system",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This happens due to incorrect format payload",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity. This happens due to missing mandatory fields in payload",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This happens if there is an unexpected error while creating account feature",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/categories": {
            "get": {
                "description": "Get all data category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get all data category",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestTotalRowResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create data category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create data category",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestTotalRowResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorValidationResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/entities": {
            "get": {
                "description": "Get all data entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entities"
                ],
                "summary": "Get all data entity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestTotalRowResponseModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "contents": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.EntityOut"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create data entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entities"
                ],
                "summary": "Create data entity",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateEntityRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestTotalRowResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorValidationResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/files/upload": {
            "post": {
                "description": "Upload transaction from CSV file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Upload transaction file",
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.FileOut"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while create account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while create account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/internal-wallets/accounts/transactions": {
            "get": {
                "description": "Get all wallet transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Internal Wallet"
                ],
                "summary": "Get all wallet transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "21100100000001,21100100000002,21100100000003",
                        "name": "accountNumbers",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2023-01-07",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "abc",
                        "name": "nextCursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "cba",
                        "name": "prevCursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2023-01-01",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "CANCEL",
                            "PENDING",
                            "SUCCESS"
                        ],
                        "type": "string",
                        "example": "PENDING",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "TUPVA",
                        "name": "transactionType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "VOLTR,TUPVA",
                        "name": "transactionTypes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestPaginationResponseModel-array_bitbucket_org_Amartha_go-fp-transaction_internal_models_ListWalletTrxByAccountNumberResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while get all transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while get all transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/internal-wallets/accounts/{accountNumber}/transactions": {
            "get": {
                "description": "Get all wallet transaction by accountNumber",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Internal Wallet"
                ],
                "summary": "Get all wallet transaction by accountNumber",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "21100100000001",
                        "name": "accountNumber",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2023-01-07",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "abc",
                        "name": "nextCursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "cba",
                        "name": "prevCursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2023-01-01",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "CANCEL",
                            "PENDING",
                            "SUCCESS"
                        ],
                        "type": "string",
                        "example": "PENDING",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "TUPVA",
                        "name": "transactionType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestPaginationResponseModel-array_bitbucket_org_Amartha_go-fp-transaction_internal_models_ListWalletTrxByAccountNumberResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while get all transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while get all transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/order-types": {
            "get": {
                "description": "Get all data order type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderType"
                ],
                "summary": "Get all data order type",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestTotalRowResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create data order type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderType"
                ],
                "summary": "Create data order type",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.OrderType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestTotalRowResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorValidationResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/order-types/:orderTypeCode": {
            "get": {
                "description": "Get order type detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderType"
                ],
                "summary": "Get order type detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order type code",
                        "name": "orderTypeCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.OrderTypeOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/recon-tools": {
            "get": {
                "description": "Get All Recon History",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReconTools"
                ],
                "summary": "Get All Recon History",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestPaginationResponseModel-array_bitbucket_org_Amartha_go-fp-transaction_internal_models_ReconToolHistory"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while delete account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while delete account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/recon-tools/:id/download": {
            "get": {
                "description": "Get result file URL Recon History",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReconTools"
                ],
                "summary": "Get result file URL Recon History",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.GetURLReconFileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while delete account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while delete account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/recon-tools/upload": {
            "post": {
                "description": "Upload reconciliation template file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReconTools"
                ],
                "summary": "Upload reconciliation template file",
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.FileOut"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while create account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while create account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/report/repayment": {
            "get": {
                "description": "Get aggregated repayment report from yesterday - 6 days before",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get repayment report (last 7 days)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources have been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.DoGetReportRepaymentResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while getting repayment report",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/sub-categories": {
            "get": {
                "description": "Get all data sub category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sub Categories"
                ],
                "summary": "Get all data sub category",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestTotalRowResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create data sub category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sub Categories"
                ],
                "summary": "Create data sub category",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateSubCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestTotalRowResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorValidationResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/transaction": {
            "get": {
                "description": "Get All transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get All transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2023-01-07",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "abc",
                        "name": "nextCursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "TOPUP",
                        "name": "orderType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "cba",
                        "name": "prevCursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Poket",
                        "name": "productTypeName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "value of accountNumber refNumber transactionId",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "accountNumber refNumber transactionId",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2023-01-01",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "TOPUP",
                        "description": "Deprecated: /v1/transaction not use this anymore",
                        "name": "transactionType",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "example": [
                            "TOPUP"
                        ],
                        "name": "transactionTypes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestPaginationResponseModel-array_bitbucket_org_Amartha_go-fp-transaction_internal_models_DoGetTransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while get all transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while get all transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/transaction-types": {
            "get": {
                "description": "Get all data transaction type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TransactionType"
                ],
                "summary": "Get all data transaction type",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestTotalRowResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/transaction-types/:transactionTypeCode": {
            "get": {
                "description": "Get transaction type detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TransactionType"
                ],
                "summary": "Get transaction type detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction type code",
                        "name": "transactionTypeCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.TransactionTypeOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/transaction/download": {
            "get": {
                "description": "Get All transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/csv"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get All transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2023-01-07",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "abc",
                        "name": "nextCursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "TOPUP",
                        "name": "orderType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "cba",
                        "name": "prevCursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Poket",
                        "name": "productTypeName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "value of accountNumber refNumber transactionId",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "accountNumber refNumber transactionId",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2023-01-01",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "TOPUP",
                        "description": "Deprecated: /v1/transaction not use this anymore",
                        "name": "transactionType",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "example": [
                            "TOPUP"
                        ],
                        "name": "transactionTypes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while get all transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while get all transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/transaction/publish": {
            "post": {
                "description": "Publish transaction to kafka to create data transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Publish transaction to kafka",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "A JSON object containing publish transaction payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.DoPublishTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.DoPublishTransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while publish transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "422": {
                        "description": "Validation error. This can happen if there is an error validation while publish transaction",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorValidationResponseModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_validation.ErrorValidateResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while publish transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/transaction/status-count": {
            "get": {
                "description": "Get transaction status count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction status count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2023-01-07",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "abc",
                        "name": "nextCursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "TOPUP",
                        "name": "orderType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "cba",
                        "name": "prevCursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Poket",
                        "name": "productTypeName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "value of accountNumber refNumber transactionId",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "accountNumber refNumber transactionId",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2023-01-01",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "name": "threshold",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "TOPUP",
                        "description": "Deprecated: /v1/transaction not use this anymore",
                        "name": "transactionType",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "example": [
                            "TOPUP"
                        ],
                        "name": "transactionTypes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.DoGetStatusCountTransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while get status count transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while get status count transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/transaction/{transactionId}": {
            "patch": {
                "description": "Update status reserved transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Update status reserved transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "transactionId",
                        "name": "transactionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "A JSON object containing payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.UpdateStatusReservedTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.UpdateStatusReservedTransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/transaction/{transactionType}/{refNumber}": {
            "get": {
                "description": "Get single transaction with criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get single transaction with criteria",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "transactionType",
                        "name": "transactionType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "refNumber",
                        "name": "refNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.DoGetTransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while get all transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while get all transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/vat-configs": {
            "get": {
                "description": "Get all data vat config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VATConfig"
                ],
                "summary": "Get all data vat config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestTotalRowResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update data vat config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VATConfig"
                ],
                "summary": "Update data vat config",
                "parameters": [
                    {
                        "description": "body",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.ConfigVatRevenue"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestTotalRowResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorValidationResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v2/files/upload": {
            "post": {
                "description": "Upload transaction from CSV file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Upload transaction file",
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.FileOut"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while create account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while create account",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/wallet-transactions": {
            "post": {
                "description": "Create wallet transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WalletTransaction"
                ],
                "summary": "Create wallet transaction",
                "parameters": [
                    {
                        "description": "A JSON object containing create transaction payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateWalletTransactionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletTransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while create transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Data not found. This can happen if there is a data not found while create transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "422": {
                        "description": "Validation error. This can happen if there is an error validation while create transaction",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorValidationResponseModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_validation.ErrorValidateResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while create transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/wallet-transactions/{id}": {
            "patch": {
                "description": "Update status wallet transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WalletTransaction"
                ],
                "summary": "Update status wallet transaction",
                "parameters": [
                    {
                        "description": "A JSON object containing create transaction payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.UpdateStatusWalletTransactionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "X-Secret-Key",
                        "name": "X-Secret-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response indicates that the request succeeded and the resources has been fetched and transmitted in the message body",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.UpdateStatusWalletTransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request error. This can happen if there is an error while update status transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Data not found. This can happen if there is a data not found while update status transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    },
                    "422": {
                        "description": "Validation error. This can happen if there is an error validation while update status transaction",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorValidationResponseModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_validation.ErrorValidateResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error. This can happen if there is an error while update status transaction",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "bitbucket_org_Amartha_go-fp-transaction_internal_common.ApiErrorResponseModel": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common.ErrorResponseModel"
                },
                "status": {
                    "type": "string",
                    "example": "internalServerError"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_common.ApiSuccessResponseModel": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "meta": {},
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_common.ErrorResponseModel": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_common_http.CursorPagination": {
            "type": "object",
            "properties": {
                "next": {
                    "type": "string",
                    "example": "cba"
                },
                "prev": {
                    "type": "string",
                    "example": "abc"
                },
                "totalEntries": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorResponseModel": {
            "type": "object",
            "properties": {
                "code": {},
                "message": {
                    "type": "string",
                    "example": "error"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestErrorValidationResponseModel": {
            "type": "object",
            "properties": {
                "errors": {},
                "message": {
                    "type": "string",
                    "example": "validation error"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestPaginationResponseModel-array_bitbucket_org_Amartha_go-fp-transaction_internal_models_DoGetTransactionResponse": {
            "type": "object",
            "properties": {
                "contents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.DoGetTransactionResponse"
                    }
                },
                "kind": {
                    "type": "string",
                    "example": "collection"
                },
                "pagination": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.CursorPagination"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestPaginationResponseModel-array_bitbucket_org_Amartha_go-fp-transaction_internal_models_GetAccountResponse": {
            "type": "object",
            "properties": {
                "contents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.GetAccountResponse"
                    }
                },
                "kind": {
                    "type": "string",
                    "example": "collection"
                },
                "pagination": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.CursorPagination"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestPaginationResponseModel-array_bitbucket_org_Amartha_go-fp-transaction_internal_models_ListWalletTrxByAccountNumberResponse": {
            "type": "object",
            "properties": {
                "contents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.ListWalletTrxByAccountNumberResponse"
                    }
                },
                "kind": {
                    "type": "string",
                    "example": "collection"
                },
                "pagination": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.CursorPagination"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestPaginationResponseModel-array_bitbucket_org_Amartha_go-fp-transaction_internal_models_ReconToolHistory": {
            "type": "object",
            "properties": {
                "contents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.ReconToolHistory"
                    }
                },
                "kind": {
                    "type": "string",
                    "example": "collection"
                },
                "pagination": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_common_http.CursorPagination"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_common_http.RestTotalRowResponseModel": {
            "type": "object",
            "properties": {
                "contents": {},
                "kind": {
                    "type": "string",
                    "example": "collection"
                },
                "total_rows": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_common_validation.ErrorValidateResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "accountNumber_required"
                },
                "field": {
                    "type": "string",
                    "example": "MISSING_FIELD"
                },
                "message": {
                    "type": "string",
                    "example": "field is missing"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.AccountsTotalBalanceResponse": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string",
                    "example": "account"
                },
                "totalBalance": {
                    "type": "number",
                    "example": 100.2
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.Amount": {
            "type": "object",
            "required": [
                "value"
            ],
            "properties": {
                "currency": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.AmountDetail": {
            "type": "object",
            "required": [
                "amount",
                "type"
            ],
            "properties": {
                "amount": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.Amount"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.ConfigVatRevenue": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number"
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateCategoryRequest": {
            "type": "object",
            "required": [
                "code",
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3
                },
                "description": {
                    "type": "string",
                    "maxLength": 50
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateEntityRequest": {
            "type": "object",
            "required": [
                "code",
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3
                },
                "description": {
                    "type": "string",
                    "maxLength": 50
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateOrderRequest": {
            "type": "object",
            "required": [
                "orderTime",
                "orderType",
                "refNumber",
                "transactions"
            ],
            "properties": {
                "orderTime": {
                    "type": "string"
                },
                "orderType": {
                    "type": "string"
                },
                "refNumber": {
                    "type": "string"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateOrderTransactionRequest"
                    }
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateOrderResponse": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string"
                },
                "orderTime": {
                    "type": "string"
                },
                "orderType": {
                    "type": "string"
                },
                "refNumber": {
                    "type": "string"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateOrderTransactionRequest"
                    }
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateOrderTransactionRequest": {
            "type": "object",
            "required": [
                "amount",
                "currency",
                "destinationAccountId",
                "id",
                "sourceAccountId",
                "status",
                "transactionTime",
                "transactionType"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destinationAccountId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "meta": {},
                "method": {
                    "type": "string"
                },
                "sourceAccountId": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "transactionTime": {
                    "type": "string"
                },
                "transactionType": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateSubCategoryRequest": {
            "type": "object",
            "required": [
                "categoryCode",
                "code",
                "name"
            ],
            "properties": {
                "categoryCode": {
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3
                },
                "code": {
                    "type": "string",
                    "maxLength": 5,
                    "minLength": 5
                },
                "description": {
                    "type": "string",
                    "maxLength": 50
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateWalletReq": {
            "type": "object",
            "properties": {
                "features": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletFeatureReq"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.CreateWalletTransactionRequest": {
            "type": "object",
            "required": [
                "accountNumber",
                "netAmount",
                "refNumber",
                "transactionFlow",
                "transactionTime",
                "transactionType"
            ],
            "properties": {
                "accountNumber": {
                    "type": "string"
                },
                "amounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.AmountDetail"
                    }
                },
                "clientId": {
                    "description": "internal use",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destinationAccountNumber": {
                    "type": "string"
                },
                "idempotencyKey": {
                    "type": "string"
                },
                "isReserved": {
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletMetadata"
                },
                "netAmount": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.Amount"
                },
                "refNumber": {
                    "type": "string"
                },
                "transactionFlow": {
                    "enum": [
                        "cashin",
                        "cashout",
                        "transfer",
                        "refund"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.TransactionFlow"
                        }
                    ]
                },
                "transactionTime": {
                    "type": "string"
                },
                "transactionType": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.DoCreateAccountRequest": {
            "type": "object",
            "required": [
                "accountNumber",
                "categoryCode",
                "currency",
                "entityCode",
                "name",
                "ownerId",
                "status",
                "subCategoryCode"
            ],
            "properties": {
                "accountNumber": {
                    "type": "string",
                    "example": "21100100000001"
                },
                "altId": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "example": "12345"
                },
                "categoryCode": {
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3,
                    "example": "211"
                },
                "currency": {
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3,
                    "example": "IDR"
                },
                "entityCode": {
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3,
                    "example": "001"
                },
                "legacyId": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "t24AccountNumber": "1234567890",
                        "t24ArrangementId": "1234567890"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "key": "value"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "ownerId": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 1,
                    "example": "12345"
                },
                "productTypeName": {
                    "type": "string",
                    "example": "BroilerX"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "inactive"
                    ],
                    "example": "active"
                },
                "subCategoryCode": {
                    "type": "string",
                    "maxLength": 5,
                    "minLength": 5,
                    "example": "10000"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.DoCreateAccountResponse": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "string",
                    "example": "21100100000001"
                },
                "altId": {
                    "type": "string",
                    "example": "12345"
                },
                "categoryCode": {
                    "type": "string",
                    "example": "211"
                },
                "currency": {
                    "type": "string",
                    "example": "IDR"
                },
                "entityCode": {
                    "type": "string",
                    "example": "001"
                },
                "kind": {
                    "type": "string",
                    "example": "account"
                },
                "legacyId": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "t24AccountNumber": "1234567890",
                        "t24ArrangementId": "1234567890"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "ownerId": {
                    "type": "string",
                    "example": "12345"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "subCategoryCode": {
                    "type": "string",
                    "example": "10000"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.DoCreateTransactionRequest": {
            "type": "object",
            "required": [
                "amount",
                "fromAccount",
                "orderType",
                "refNumber",
                "toAccount",
                "transactionTime",
                "transactionType"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "fromAccount": {
                    "type": "string"
                },
                "isReserved": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "method": {
                    "type": "string"
                },
                "orderType": {
                    "type": "string"
                },
                "refNumber": {
                    "type": "string"
                },
                "toAccount": {
                    "type": "string"
                },
                "transactionTime": {
                    "type": "string"
                },
                "transactionType": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.DoGetAccountBalanceResponse": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "string",
                    "example": "21100100000001"
                },
                "actualBalance": {
                    "type": "string",
                    "example": "10000"
                },
                "availableBalance": {
                    "type": "string",
                    "example": "10000"
                },
                "currency": {
                    "type": "string",
                    "example": "IDR"
                },
                "kind": {
                    "type": "string",
                    "example": "accountBalance"
                },
                "lastUpdatedAt": {
                    "description": "ISO 8601",
                    "type": "string",
                    "example": "2024-01-22T15:51:43+0700"
                },
                "pendingBalance": {
                    "type": "string",
                    "example": "10000"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.DoGetReportRepaymentResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.ReportRepaymentResponse"
                    }
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.DoGetStatusCountTransactionResponse": {
            "type": "object",
            "properties": {
                "exceedThreshold": {
                    "type": "boolean",
                    "example": false
                },
                "kind": {
                    "type": "string",
                    "example": "status-count-transaction"
                },
                "threshold": {
                    "type": "integer",
                    "example": 500000
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.DoGetTransactionResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string",
                    "example": "50777"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2006-01-02 15:04:05"
                },
                "currency": {
                    "type": "string",
                    "example": "IDR"
                },
                "description": {
                    "type": "string",
                    "example": "Topup from VA"
                },
                "fromAccount": {
                    "type": "string",
                    "example": "189513"
                },
                "fromAccountName": {
                    "type": "string",
                    "example": "John"
                },
                "fromAccountProductTypeName": {
                    "type": "string",
                    "example": "valid"
                },
                "kind": {
                    "type": "string",
                    "example": "transaction"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "key": "value"
                    }
                },
                "method": {
                    "type": "string",
                    "example": "TOPUP.VA"
                },
                "orderType": {
                    "type": "string",
                    "example": "TOPUP"
                },
                "orderTypeName": {
                    "type": "string",
                    "example": "TOPUP"
                },
                "refNumber": {
                    "type": "string",
                    "example": "55aa66bb-e6e0-4065-9f4a-64182e97e9d9"
                },
                "status": {
                    "type": "string",
                    "example": "1"
                },
                "toAccount": {
                    "type": "string",
                    "example": "222000000069"
                },
                "toAccountName": {
                    "type": "string",
                    "example": "John"
                },
                "toAccountProductTypeName": {
                    "type": "string",
                    "example": "valid"
                },
                "transactionDate": {
                    "type": "string",
                    "example": "2023-10-25"
                },
                "transactionId": {
                    "type": "string",
                    "example": "c172ca84-9ae2-489c-ae4f-8ef372a109ae"
                },
                "transactionTime": {
                    "type": "string",
                    "example": "2023-10-25 08:08:26"
                },
                "transactionType": {
                    "type": "string",
                    "example": "TOPUP"
                },
                "transactionTypeName": {
                    "type": "string",
                    "example": "TOPUP"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2006-01-02 15:04:05"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.DoPublishTransactionRequest": {
            "type": "object",
            "required": [
                "amount",
                "fromAccount",
                "orderType",
                "toAccount",
                "transactionDate",
                "transactionType"
            ],
            "properties": {
                "amount": {
                    "type": "string",
                    "example": "500000.00"
                },
                "description": {
                    "type": "string",
                    "example": "topup lenderId 666 via BANK TRANSFER"
                },
                "fromAccount": {
                    "type": "string",
                    "example": "666"
                },
                "metadata": {},
                "method": {
                    "type": "string",
                    "example": "BANK_TRANFER"
                },
                "orderType": {
                    "type": "string",
                    "example": "TOPUP"
                },
                "refNumber": {
                    "type": "string",
                    "example": "97075538-e0ac-460f-b5c2-61c6e14fc72d"
                },
                "toAccount": {
                    "type": "string",
                    "example": "777"
                },
                "transactionDate": {
                    "type": "string",
                    "example": "2006-12-02"
                },
                "transactionType": {
                    "type": "string",
                    "example": "TOPUP"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.DoPublishTransactionResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string",
                    "example": "500000.00"
                },
                "description": {
                    "type": "string",
                    "example": "topup lenderId 666 via BANK TRANSFER"
                },
                "fromAccount": {
                    "type": "string",
                    "example": "666"
                },
                "kind": {
                    "type": "string",
                    "example": "transaction"
                },
                "metadata": {},
                "method": {
                    "type": "string",
                    "example": "BANK_TRANFER"
                },
                "orderType": {
                    "type": "string",
                    "example": "TOPUP"
                },
                "refNumber": {
                    "type": "string",
                    "example": "97075538-e0ac-460f-b5c2-61c6e14fc72d"
                },
                "toAccount": {
                    "type": "string",
                    "example": "777"
                },
                "transactionDate": {
                    "type": "string",
                    "example": "2006-12-02"
                },
                "transactionType": {
                    "type": "string",
                    "example": "TOPUP"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.EntityOut": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.FileOut": {
            "type": "object",
            "properties": {
                "file": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.GetAccountResponse": {
            "type": "object",
            "properties": {
                "accountName": {
                    "type": "string",
                    "example": "John"
                },
                "accountNumber": {
                    "type": "string",
                    "example": "21100100000001"
                },
                "actualBalance": {
                    "type": "string",
                    "example": "10000"
                },
                "availableBalance": {
                    "type": "string",
                    "example": "10000"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2006-01-02 15:04:05"
                },
                "currency": {
                    "type": "string",
                    "example": "IDR"
                },
                "features": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletFeature"
                },
                "kind": {
                    "type": "string",
                    "example": "account"
                },
                "ownerId": {
                    "type": "string",
                    "example": "5432"
                },
                "pendingBalance": {
                    "type": "string",
                    "example": "10000"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2006-01-02 15:04:05"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.GetURLReconFileResponse": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string"
                },
                "resultFileUrl": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.ListWalletTrxByAccountNumberResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.Amount"
                },
                "amounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.AmountDetail"
                    }
                },
                "description": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletMetadata"
                },
                "refNumber": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletTransactionStatus"
                },
                "transactionDate": {
                    "type": "string"
                },
                "transactionFlow": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.TransactionFlow"
                },
                "transactionTime": {
                    "type": "string"
                },
                "transactionType": {
                    "type": "string"
                },
                "transactionWalletId": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.OrderType": {
            "type": "object",
            "properties": {
                "orderTypeCode": {
                    "type": "string"
                },
                "orderTypeName": {
                    "type": "string"
                },
                "transactionTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.TransactionType"
                    }
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.OrderTypeOut": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string"
                },
                "orderTypeCode": {
                    "type": "string"
                },
                "orderTypeName": {
                    "type": "string"
                },
                "transactionTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.TransactionTypeOut"
                    }
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.ReconToolHistory": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "orderType": {
                    "type": "string"
                },
                "resultFilePath": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "transactionDate": {
                    "type": "string"
                },
                "transactionType": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uploadedFilePath": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.ReportRepaymentResponse": {
            "type": "object",
            "properties": {
                "amartha": {
                    "type": "number"
                },
                "lender": {
                    "type": "number"
                },
                "outstanding": {
                    "type": "number"
                },
                "pph": {
                    "type": "number"
                },
                "ppn": {
                    "type": "number"
                },
                "principal": {
                    "type": "number"
                },
                "total": {
                    "type": "number"
                },
                "transactionDate": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.TransactionFlow": {
            "type": "string",
            "enum": [
                "cashin",
                "cashout",
                "transfer",
                "refund"
            ],
            "x-enum-varnames": [
                "TransactionFlowCashIn",
                "TransactionFlowCashOut",
                "TransactionFlowTransfer",
                "TransactionFlowRefund"
            ]
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.TransactionType": {
            "type": "object",
            "properties": {
                "transactionTypeCode": {
                    "type": "string"
                },
                "transactionTypeName": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.TransactionTypeOut": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string"
                },
                "transactionTypeCode": {
                    "type": "string"
                },
                "transactionTypeName": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.UpdateAccountBySubCategoryRequest": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string",
                    "example": "IDR"
                },
                "productTypeName": {
                    "type": "string",
                    "example": "CIH Lender"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.UpdateAccountRequest": {
            "type": "object",
            "required": [
                "isHvt"
            ],
            "properties": {
                "features": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletFeatureReq"
                },
                "isHvt": {
                    "type": "boolean",
                    "example": true
                },
                "status": {
                    "type": "string",
                    "example": "active"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.UpdateStatusReservedTransactionRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "commit",
                        "cancel"
                    ],
                    "example": "commit"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.UpdateStatusReservedTransactionResponse": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string",
                    "example": "transaction"
                },
                "status": {
                    "type": "string",
                    "example": "SUCCESS"
                },
                "transactionId": {
                    "type": "string",
                    "example": "41d03147-c017-4176-8a1a-0b7ec735cc29"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.UpdateStatusWalletTransactionRequest": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "commit",
                        "cancel"
                    ],
                    "example": "commit"
                },
                "clientId": {
                    "description": "internal use",
                    "type": "string"
                },
                "transactionTime": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.UpdateStatusWalletTransactionResponse": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string",
                    "example": "walletTransaction"
                },
                "status": {
                    "type": "string",
                    "example": "SUCCESS"
                },
                "transactionId": {
                    "type": "string",
                    "example": "41d03147-c017-4176-8a1a-0b7ec735cc29"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletFeature": {
            "type": "object",
            "properties": {
                "allowedNegativeBalance": {
                    "type": "boolean"
                },
                "balanceRangeMax": {
                    "type": "number"
                },
                "balanceRangeMin": {
                    "type": "number"
                },
                "negativeBalanceLimit": {
                    "type": "number"
                },
                "preset": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletFeatureReq": {
            "type": "object",
            "properties": {
                "allowedNegativeBalance": {
                    "type": "boolean"
                },
                "balanceRangeMax": {
                    "type": "string"
                },
                "balanceRangeMin": {
                    "type": "string"
                },
                "negativeBalanceLimit": {
                    "type": "string"
                },
                "preset": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletMetadata": {
            "type": "object",
            "additionalProperties": {}
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletResponse": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "string"
                },
                "features": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletFeature"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletTransactionResponse": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "string"
                },
                "amounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.AmountDetail"
                    }
                },
                "description": {
                    "type": "string"
                },
                "destinationAccountNumber": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletMetadata"
                },
                "netAmount": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.Amount"
                },
                "refNumber": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletTransactionStatus"
                },
                "transactionFlow": {
                    "$ref": "#/definitions/bitbucket_org_Amartha_go-fp-transaction_internal_models.TransactionFlow"
                },
                "transactionTime": {
                    "type": "string"
                },
                "transactionType": {
                    "type": "string"
                }
            }
        },
        "bitbucket_org_Amartha_go-fp-transaction_internal_models.WalletTransactionStatus": {
            "type": "string",
            "enum": [
                "PENDING",
                "SUCCESS",
                "CANCEL"
            ],
            "x-enum-varnames": [
                "WalletTransactionStatusPending",
                "WalletTransactionStatusSuccess",
                "WalletTransactionStatusCancel"
            ]
        },
        "internal_deliveries_http_health.DoHealthCheckLivenessResponse": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string",
                    "example": "health"
                },
                "status": {
                    "type": "string",
                    "example": "server is up and running"
                }
            }
        }
    }
}